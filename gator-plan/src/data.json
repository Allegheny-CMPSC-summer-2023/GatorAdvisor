{
  "courses": [
    {
      "courseNumber": "CMPSC 100",
      "courseName": "Computational Expression",
      "Major": [
        "Computer Science Major",
        "Data Science Major",
        "Informatics Major",
        "Software Engineering Major"
      ],
      "Minor": [
        "Computer Science Minor",
        "Data Science Minor",
        "Informatics Minor",
        "Software Engineering Minor"
      ],
      "distributionRequirements": [
        "ME",
        "SP"
      ],
      "credits": "4",
      "prerequisites": {
        "anyof": [],
        "allof": [
          "Knowledge of elementary algebra"
        ]
      },
      "unlocks": [
        "CMPSC 101",
        "CMPSC 102",
        "CMPSC 300"
      ],
      "courseDescription": "An introduction to the principles of computer science with an emphasis on creative expression through the medium of a programming language. Participating in hands-on activities that often require teamwork, students learn the computational structures needed to solve problems and produce computational artifacts which address these problems in real-world contexts. Students also learn how to organize and document a program's source code so that it effectively communicates with the intended users and maintainers. Additionally, the introduction includes an overview of the discipline of computer science and computational thinking. During a weekly laboratory session students use industry-grade technology to complete projects, reporting on their results through both written documents and oral presentations. Students are invited to use their own departmentally approved laptop in this course; a limited number of laptops are available for use during class and lab sessions.",
      "cslevel": "foundation",
      "dslevel": "foundation",
      "dsSub": "",
      "inflevel": "foundation",
      "infSub": "",
      "selevel": "foundation",
      "topics": [
        "Object-oriented programming (OOP)",
        "Teamwork",
        "Version control systems",
        "Integrated development environments (IDE)",
        "Iteration",
        "Python programming",
        "Functions",
        "GitHub Flow",
        "Markdown"
      ],
      "tools": [
        "Python",
        "VSCode",
        "Git",
        "GitHub"
      ],
      "lab": [],
      "learningObjectives": [],
      "learningOutcomes": []
    },
    {
      "courseNumber": "CMPSC 102",
      "courseName": "Discrete Structures",
      "Major": [
        "Computer Science Major"
      ],
      "Minor": [
        "Computer Science Minor"
      ],
      "distributionRequirements": [
        "QR",
        "SP"
      ],
      "credits": "4",
      "prerequisites": {
        "anyof": [],
        "allof": [
          "CMPSC 100"
        ]
      },
      "unlocks": [
        "CMPSC 200",
        "CMPSC 201",
        "CMPSC 102",
        "CMPSC 204",
        "CMPSC 301",
        "CMPSC 303",
        "CMPSC 304"
      ],
      "courseDescription": "An introduction to the foundations of computer science with an emphasis on understanding the abstract structures used to represent discrete objects. Participating in hands-on activities that often require teamwork, students learn the computational methods and logical principles that they need to create and manipulate discrete objects in a programming environment. Students also learn how to write, organize, and document a program’s source code so that it is easily accessible to intended users of varied backgrounds. During a weekly laboratory session students use state-of-the-art technology to complete projects, reporting on their results through both written documents and oral presentations. Students are invited to use their own departmentally approved laptop in this course; a limited number of laptops are available for use during class and lab sessions.",
      "cslevel": "foundation",
      "dslevel": "",
      "dsSub": "",
      "inflevel": "",
      "infSub": "",
      "selevel": "",
      "technicalTopics": [
        "Programming Constructs",
        "Python Functions",
        "Building and Using Virtual Environments",
        "Data Containers",
        "Sets",
        "Tuples",
        "Lists",
        "Dictionaries",
        "Monoids",
        "Generator Functions",
        "Statistics",
        "Plotting"
      ],
      "professionalTopics": [
        "teamwork",
        "code development",
        "communication",
        "presentations",
        "analysis",
        "programming"
      ],
    
      "tools": [
        "Poetry",
        "typer",
        "rich",
        "Python",
        "GatorGrader",
        "Git",
        "GitHub",
        "Matplotlib",
        "VScode",
        "Jupyter Notebook",
        "pytest",
        "CSV",
        "Markdown"
      ],
      "platform": ["https://github.com/CMPSC-102-Allegheny-College-Fall-2022"
      ],
      "learningObjectives": [
        "To understand programming and mathematical constructs",
        "To master skills of technical communication",
        "To implement mathematical structure in programming",
        "To use industry-standard tools such as GitHub to maintain code",
        "To write clean and readable Python code that is easy for others to understand.",
      ],
      "learningOutcomes": [
        "To test programs thoroughly before submission.",
        "To demonstrate proficiency in python programming environments.",
        "To be to create clear and meaningful technical documentation.",
        "To be able to demonstrate mathematical concepts and translate meaning in language.",
        "To be able to work effectively in Python environments"
      ]
    },
    {
      "courseNumber": "CMPSC 200",
      "courseName": "Computer Organization",
      "Major": [
        "Computer Science Major"
      ],
      "Minor": [
        "Computer Science Minor"
      ],
      "distributionRequirements": [
        "QR",
        "SP"
      ],
      "credits": "4",
      "prerequisites": {
        "anyof": [],
        "allof": [
          "CMPSC 102"
        ]
      },
      "unlocks": [
        "CMPSC 400",
        "CMPSC 403",
        "CMPSC 406"
      ],
      "courseDescription": "A study of the low-level operation of computer systems. Participating in hands-on activities that often require teamwork, students investigate how computers process instructions in modern computers as information is encoded, stored, and executed in a machine’s physical structures. In addition to learning how to program in assembly and machine languages, students investigate the design and logical operation of processors and the mathematics of machine computation. During a weekly laboratory session, students use state-of-the-art technology to complete projects, reporting on their results through both written documents and oral presentations. Students are invited to use their own departmentally approved laptop in this course; a limited number of laptops are available for use during class and lab sessions.",
      "cslevel": "core",
      "dslevel": "",
      "dsSub": "",
      "inflevel": "",
      "infSub": "",
      "selevel": "",
      "topics": [
        "Object-oriented programming",
        "Memory management",
        "Declarative programming",
        "Instruction set architectures (ISA)",
        "Functional programming",
        "Digital circuits",
        "Low-level languages"
      ],
      "tools": [
        "Docker",
        "Verilog",
        "C++",
        "Assembly"
      ],
      "lab": [],
      "learningObjectives": [],
      "learningOutcomes": []
    },
    {
      "courseNumber": "CMPSC 104",
      "courseName": "Document Engineering",
      "Major": [
        "Software Engineering Major"
      ],
      "Minor": [],
      "distributionRequirements": [
        "HE",
        "SP"
      ],
      "credits": "4",
      "prerequisites": {
        "anyof": [],
        "allof": []
      },
      "unlocks": [
        "CMPSC 302"
      ],
      "courseDescription": "An introduction to creation of effective documents and documentation using industry-standard approaches to creating and treating 'documentation as code.' Participating in project-based and hands-on activities, students create purpose-driven digital writing with special attention to forms, formats, and conventions expected of contemporary technical communication. Students also gain experience with creating collaborative and ethically-consistent content working in a team-based setting. During a weekly laboratory session students employ contemporary software tools to complete technical documentation projects, reporting on their results through both written reflections and oral presentations. Students are invited to use their own departmentally approved laptop in this course; a limited number of laptops are available for use during class and lab sessions.",
      "cslevel": "",
      "dslevel": "",
      "dsSub": "",
      "inflevel": "",
      "infSub": "",
      "selevel": "foundation",
      "topics": [],
      "tools": [],
      "lab": [],
      "learningObjectives": [],
      "learningOutcomes": []
    },
    {
      "courseNumber": "CMPSC 202",
      "courseName": "Algorithm Analysis",
      "Major": [
        "Computer Science Major"
      ],
      "Minor": [
        "Computer Science Minor"
      ],
      "distributionRequirements": [
        "QR",
        "SP"
      ],
      "credits": "4",
      "prerequisites": {
        "anyof": [],
        "allof": []
      },
      "unlocks": [
        "CMPSC 580"
      ],
      "courseDescription": "A study of fundamental methods for designing and implementing algorithms and analyzing their efficiency. While developing expertise in select models of computation and the key mathematical and experimental approaches to studying algorithm efficiency, students investigate different types of algorithms through hands-on activities that often require teamwork. Students also learn how to determine whether a problem can be efficiently solved by an algorithm that is implemented as a computer program. During a weekly laboratory session, students use state-of-the-art technology to complete projects, reporting on their results through both written documents and oral presentations. Students are invited to use their own departmentally approved laptop in this course; a limited number of laptops are available for use during class and lab sessions.",
      "cslevel": "",
      "dslevel": "",
      "dsSub": "",
      "inflevel": "",
      "infSub": "",
      "selevel": "foundation",
      "topics": [
        "Teamwork",
        "Memory Management",
        "Code Review",
        "Continuous Deployment",
        "Algorithms",
        "Time Complexity",
        "Version Control Systems",
        "Technical Writing"
      ],
      "tools": [
        "Docker",
        "LaTeX",
        "Git",
        "Python",
        "GitHub",
        "Travis CI",
        "Java",
        "Discord"
      ],
      "lab": [],
      "learningObjectives": [],
      "learningOutcomes": []
    },
    {
      "courseNumber": "CMPSC 204",
      "courseName": "Theoretical Machines",
      "Major": [
        "Computer Science Major"
      ],
      "Minor": [
        "Computer Science Minor"
      ],
      "distributionRequirements": [
        "QR",
        "SP"
      ],
      "credits": "4",
      "prerequisites": {
        "anyof": [],
        "allof": [
          "CMPSC 102"
        ]
      },
      "unlocks": [],
      "courseDescription": "A study of theoretical computer science concepts that addresses both the fundamental nature and limitations of computation and the ways in which to practically apply these insights. While using a machine-centered abstraction of computation implemented in a general-purpose programming language, students investigate what is computable and explore the categories and complexity of computational problems. Participating in hands-on activities that often require teamwork, students gain experience in the use of a programming language to characterize a problem solving strategy. During a weekly laboratory session, students use industry-grade technology to complete projects, reporting on their results through both written documents and oral presentations. Students are invited to use their own departmentally approved laptop in this course; a limited number of laptops are available for use during class and lab sessions.",
      "cslevel": "core",
      "dslevel": "",
      "dsSub": "",
      "inflevel": "",
      "infSub": "",
      "selevel": "",
      "topics": [],
      "tools": [],
      "lab": [],
      "learningObjectives": [],
      "learningOutcomes": []
    }
  ]
}